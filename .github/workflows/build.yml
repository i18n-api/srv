on:
  workflow_call:
    inputs:
      name:
        required: true
        type: string

jobs:
  build:
    permissions:
      repository-projects: write
      contents: write
    name: build
    strategy:
      matrix:
        platform: [ubuntu-latest]
        # platform: [macos-latest,ubuntu-latest,mac-arm,windows-latest]
    runs-on: ${{ matrix.platform }}
    steps:
      - uses: actions/checkout@v4
        with:
          set-safe-directory: false
          lfs: true
          path: srv

      - name: clone dist
        uses: actions/checkout@v4
        with:
          repository: i18n-dist/dist
          token: ${{ secrets.GH_PAT }}
          path: dist

      - uses: actions/setup-node@v4
        with:
          node-version: latest

      - uses: oven-sh/setup-bun@v1
      - name: Install Protoc
        if: runner.os != 'macOS'
        uses: arduino/setup-protoc@v3
        with:
          repo-token: ${{ github.token }}

      - name: rust-toolchain
        uses: actions-rust-lang/setup-rust-toolchain@v1
        with:
            # https://github.com/dalek-cryptography/curve25519-dalek/issues/618
            toolchain: nightly
            # toolchain: nightly-2024-05-04
            cache: false
            components: rust-src
            # components: rustfmt, clippy

      - name: init rust
        shell: bash
        run: |
          echo "RUST_VER=$(rustc -vV | awk '/date:/ { print $2 }')" >> $GITHUB_ENV
          mkdir -p ~/cache/rust/target ~/.cargo
          echo -e "[build]\ntarget-dir = \"$HOME/cache/rust/target\"" >~/.cargo/config.toml

      - name: restore cache
        uses: actions/cache/restore@v4
        with:
          key: ${{ runner.os }}-${{ env.RUST_VER }}-cache
          path: |
            ~/cache/rust/target

      - name: clone in
        uses: actions/checkout@v4
        with:
          repository: i18n-api/in
          path: in
          set-safe-directory: false
          lfs: true
          token: ${{ secrets.GH_PAT }}
      - name: clone conf
        uses: actions/checkout@v4
        with:
          repository: i18n-api/conf-ol
          path: conf
          set-safe-directory: false
          lfs: true
          token: ${{ secrets.GH_PAT }}
      - name: clone rust
        uses: actions/checkout@v4
        with:
          repository: i18n-site/rust
          path: rust
          set-safe-directory: false
          lfs: true
      - name: clone srv/mod/pub
        uses: actions/checkout@v4
        with:
          repository: i18n-api/mod.pub
          path: srv/mod/pub
          set-safe-directory: false
          lfs: true

      - name: clone srv/mod/private
        uses: actions/checkout@v4
        with:
          repository: i18n-api/mod.private
          path: srv/mod/private
          set-safe-directory: false
          lfs: true
          token: ${{ secrets.GH_PAT }}

      - name: Save Cache
        uses: actions/cache/save@v4
        with:
          key: ${{ runner.os }}-${{ env.RUST_VER }}-cache
          path: |
            ~/cache/rust/target

      - name: github release
        shell: bash
        env:
          GH_TOKEN: ${{ github.token }}
        run: |
          curl -sfL https://direnv.net/install.sh | bash
          srv/init.sh
          srv/rust/sh/github.release.sh

      - name: 部署到线上服务器
        shell: bash
        run: |
          ./srv/rust/sh/deploy.sh $(pwd)/dist
